Registers
Attitude
YawPitchRoll
class vnpy.Registers.Attitude.YawPitchRoll
Measurement register, ID 8
Attitude solution as yaw, pitch, and roll in degrees. The yaw, pitch, and roll is given as a 3,2,1 Euler angle rotation sequence describing the orientation of the sensor with respect to the inertial North East Down (NED) frame.
yaw: float
Yaw angle.
pitch: float
Pitch angle.
roll: float
Roll angle.
Quaternion
class vnpy.Registers.Attitude.Quaternion
Measurement register, ID 9
Attitude solution as a quaternion.
quatX: float
First vector component of quaternion.
quatY: float
Second vector component of quaternion.
quatZ: float
Third vector component of quaternion.
quatS: float
Scalar component of quaternion.
QuatMagAccelRate
class vnpy.Registers.Attitude.QuatMagAccelRate
Measurement register, ID 15
Quaternion attitude solution, and compensated (Magnetic, Acceleration, Angular Rate) values.
quatX: float
First vector component of quaternion.
quatY: float
Second vector component of quaternion.
quatZ: float
Third vector component of quaternion.
quatS: float
Scalar component of quaternion.
magX: float
Compensated magnetometer measurement in the body-frame x-axis.
magY: float
Compensated magnetometer measurement in the body-frame y-axis.
magZ: float
Compensated magnetometer measurement in the body-frame z-axis.
accelX: float
Compensated accelerometer measurement in the body-frame x-axis.
accelY: float
Compensated accelerometer measurement in the body-frame y-axis.
accelZ: float
Compensated accelerometer measurement in the body-frame z-axis.
gyroX: float
Compensated angular rate measurement in the body-frame x-axis.
gyroY: float
Compensated angular rate measurement in the body-frame y-axis.
gyroZ: float
Compensated angular rate measurement in the body-frame z-axis.
MagGravRefVec
class vnpy.Registers.Attitude.MagGravRefVec
Configuration register, ID 21
magRefN: float
magRefE: float
magRefD: float
gravRefN: float
gravRefE: float
gravRefD: float
YprMagAccelAngularRates
class vnpy.Registers.Attitude.YprMagAccelAngularRates
Measurement register, ID 27
Yaw, Pitch, Roll, Accel, and Angular Rates
yaw: float
Yaw angle.
pitch: float
Pitch angle.
roll: float
Roll angle.
magX: float
Compensated magnetometer measurement in the body-frame x-axis.
magY: float
Compensated magnetometer measurement in the body-frame y-axis.
magZ: float
Compensated magnetometer measurement in the body-frame z-axis.
accelX: float
Compensated accelerometer measurement in the body-frame x-axis.
accelY: float
Compensated accelerometer measurement in the body-frame y-axis.
accelZ: float
Compensated accelerometer measurement in the body-frame z-axis.
gyroX: float
Compensated angular rate measurement in the body-frame x-axis.
gyroY: float
Compensated angular rate measurement in the body-frame y-axis.
gyroZ: float
Compensated angular rate measurement in the body-frame z-axis.
VpeBasicControl
class vnpy.Registers.Attitude.VpeBasicControl
Configuration register, ID 35
resv: uint8_t
headingMode: VpeBasicControl.HeadingMode
filteringMode: VpeBasicControl.FilteringMode
tuningMode: VpeBasicControl.TuningMode
class HeadingMode
Absolute
Relative
Indoor
class FilteringMode
Unfiltered
AdaptivelyFiltered
class TuningMode
Static
Adaptive
VpeMagBasicTuning
class vnpy.Registers.Attitude.VpeMagBasicTuning
Configuration register, ID 36
baseTuningX: float
baseTuningY: float
baseTuningZ: float
adaptiveTuningX: float
adaptiveTuningY: float
adaptiveTuningZ: float
adaptiveFilteringX: float
adaptiveFilteringY: float
adaptiveFilteringZ: float
VpeAccelBasicTuning
class vnpy.Registers.Attitude.VpeAccelBasicTuning
Configuration register, ID 38
baseTuningX: float
baseTuningY: float
baseTuningZ: float
adaptiveTuningX: float
adaptiveTuningY: float
adaptiveTuningZ: float
adaptiveFilteringX: float
adaptiveFilteringY: float
adaptiveFilteringZ: float
YprLinearBodyAccelAngularRates
class vnpy.Registers.Attitude.YprLinearBodyAccelAngularRates
Measurement register, ID 239
Yaw, Pitch, Roll, Linear Body Accel, and Angular Rates.
yaw: float
Yaw angle.
pitch: float
Pitch angle.
roll: float
Roll angle.
linAccelX: float
Linear acceleration in body-frame x-axis.
linAccelY: float
Linear acceleration in body-frame y-axis.
linAccelZ: float
Linear acceleration in body-frame z-axis.
gyroX: float
Compensated angular rate measurement in the body-frame x-axis.
gyroY: float
Compensated angular rate measurement in the body-frame y-axis.
gyroZ: float
Compensated angular rate measurement in the body-frame z-axis.
YprLinearInertialAccelAngularRates
class vnpy.Registers.Attitude.YprLinearInertialAccelAngularRates
Measurement register, ID 240
Yaw, Pitch, Roll, Linear Inertial Accel, and Angular Rates.
yaw: float
Yaw angle.
pitch: float
Pitch angle.
roll: float
Roll angle.
linAccelN: float
Linear acceleration in North direction.
linAccelE: float
Linear acceleration in East direction.
linAccelD: float
Linear acceleration in Down direction.
gyroX: float
Compensated angular rate measurement in the body-frame x-axis.
gyroY: float
Compensated angular rate measurement in the body-frame y-axis.
gyroZ: float
Compensated angular rate measurement in the body-frame z-axis.
GNSS
GnssBasicConfig
class vnpy.Registers.GNSS.GnssBasicConfig
Configuration register, ID 55
receiverEnable: GnssBasicConfig.ReceiverEnable
ppsSource: GnssBasicConfig.PpsSource
rate: GnssBasicConfig.Rate
resv4: uint8_t
antPower: GnssBasicConfig.AntPower
class ReceiverEnable
Internal
VnWrite
VnAdor
GnssA
VnWriteAndGnssA
VnAdorAndGnssA
VnWriteAndGnssAB
VnAdorAndGnssAB
class PpsSource
PpsPinRising
PpsPinFalling
SyncInRising
SyncInFalling
None
class Rate
Rate1Hz
Rate5Hz
class AntPower
Off
Internal
External
GnssAOffset
class vnpy.Registers.GNSS.GnssAOffset
Configuration register, ID 57
positionX: float
positionY: float
positionZ: float
GnssSolLla
class vnpy.Registers.GNSS.GnssSolLla
Measurement register, ID 58
Primary GNSS receiver measurement with lat/lon/alt position and velocity in NED frame.
gps1Tow: double
GPS time of week.
gps1Week: uint16_t
The current GPS week.
gnss1Fix: GnssSolLla.Gnss1Fix
Type of GNSS fix.
gnss1NumSats: uint8_t
Number of satellites tracked by GNSS receiver.
lat: double
GNSS geodetic latitude.
lon: double
GNSS longitude.
alt: double
GNSS altitude above WGS84 ellipsoid.
velN: float
GNSS velocity in North direction.
velE: float
GNSS velocity in East direction.
velD: float
GNSS velocity in Down direction.
posUncertaintyN: float
GNSS position uncertainty, North direction.
posUncertaintyE: float
GNSS position uncertainty, East direction.
posUncertaintyD: float
GNSS position uncertainty, Down direction.
gnss1VelUncertainty: float
GNSS velocity uncertainty (scalar).
gnss1TimeUncertainty: float
GNSS time uncertainty.
class Gnss1Fix
NoFix
TimeFix
Fix2D
Fix3D
SBAS
RtkFloat
RtkFix
GnssSolEcef
class vnpy.Registers.GNSS.GnssSolEcef
Measurement register, ID 59
Primary GNSS receiver measurement in ECEF frame.
gps1Tow: double
GPS time of week.
gps1Week: uint16_t
The current GPS week.
gnss1Fix: GnssSolEcef.Gnss1Fix
Type of GNSS fix.
gnss1NumSats: uint8_t
Number of satellites tracked by GNSS receiver.
posX: double
GNSS position in ECEF-frame x-axis.
posY: double
GNSS position in ECEF-frame y-axis.
posZ: double
GNSS position in ECEF-frame z-axis.
velX: float
GNSS velocity in ECEF-frame x-axis.
velY: float
GNSS velocity in ECEF-frame y-axis.
velZ: float
GNSS velocity in ECEF-frame z-axis.
posUncertaintyX: float
GNSS position uncertainty ECEF X.
posUncertaintyY: float
GNSS position uncertainty ECEF Y.
posUncertaintyZ: float
GNSS position uncertainty ECEF Z.
gnss1VelUncertainty: float
GNSS velocity uncertainty (scalar).
gnss1TimeUncertainty: float
GNSS time uncertainty.
class Gnss1Fix
NoFix
TimeFix
Fix2D
Fix3D
SBAS
RtkFloat
RtkFix
GnssSystemConfig
class vnpy.Registers.GNSS.GnssSystemConfig
Configuration register, ID 99
systems: uint16_t
minCno: uint8_t
minElev: uint8_t
maxSats: uint8_t
sbasMode: uint8_t
sbasSelect1: uint16_t
sbasSelect2: uint16_t
sbasSelect3: uint16_t
receiverSelect: GnssSystemConfig.ReceiverSelect
class ReceiverSelect
GnssAB
GnssA
GnssB
class Systems
Systems.gps
Systems.sbas
Systems.glonass
Systems.beidou
Systems.galileo
Systems.imes
Systems.qzssL1Ca
Systems.qzssL1Saif
class SbasMode
SbasMode.ranging
SbasMode.diffCorr
SbasMode.integrity
SbasMode.testMode
class SbasSelect1
SbasSelect1.sbas120
SbasSelect1.sbas121
SbasSelect1.sbas122
SbasSelect1.sbas123
SbasSelect1.sbas124
SbasSelect1.sbas125
SbasSelect1.sbas126
SbasSelect1.sbas127
SbasSelect1.sbas128
SbasSelect1.sbas129
SbasSelect1.sbas130
SbasSelect1.sbas131
SbasSelect1.sbas132
SbasSelect1.sbas133
SbasSelect1.sbas134
SbasSelect1.sbas135
class SbasSelect2
SbasSelect2.sbas136
SbasSelect2.sbas137
SbasSelect2.sbas138
SbasSelect2.sbas139
SbasSelect2.sbas140
SbasSelect2.sbas141
SbasSelect2.sbas142
SbasSelect2.sbas143
SbasSelect2.sbas144
SbasSelect2.sbas145
SbasSelect2.sbas146
SbasSelect2.sbas147
SbasSelect2.sbas148
SbasSelect2.sbas149
SbasSelect2.sbas150
SbasSelect2.sbas151
class SbasSelect3
SbasSelect3.sbas152
SbasSelect3.sbas153
SbasSelect3.sbas154
SbasSelect3.sbas155
SbasSelect3.sbas156
SbasSelect3.sbas157
SbasSelect3.sbas158
GnssSyncConfig
class vnpy.Registers.GNSS.GnssSyncConfig
Configuration register, ID 100
gnssSyncEnable: GnssSyncConfig.GnssSyncEnable
polarity: GnssSyncConfig.Polarity
specType: GnssSyncConfig.SpecType
resv: uint8_t
period: uint32_t
pulseWidth: uint32_t
offset: int32_t
class GnssSyncEnable
Off
AlwaysOn
OnWhenLocked
class Polarity
FallingEdge
RisingEdge
class SpecType
PeriodPulseWidth
FreqDutyCycle
Gnss2SolLla
class vnpy.Registers.GNSS.Gnss2SolLla
Measurement register, ID 103
Estimated GNSS 2 Solution with lat/lon/alt position. This register is deprecated and will be removed in future firmware versions.
gps2Tow: double
GPS time of week.
gps2Week: uint16_t
The current GPS week.
gnss2Fix: Gnss2SolLla.Gnss2Fix
Type of GNSS fix.
gnss2NumSats: uint8_t
Number of satellites tracked by GNSS receiver.
lat: double
GNSS geodetic latitude.
lon: double
GNSS longitude.
alt: double
GNSS altitude above WGS84 ellipsoid.
velN: float
GNSS velocity in North direction.
velE: float
GNSS velocity in East direction.
velD: float
GNSS velocity in Down direction.
posUncertaintyN: float
GNSS position uncertainty, North direction.
posUncertaintyE: float
GNSS position uncertainty, East direction.
posUncertaintyD: float
GNSS position uncertainty, Down direction.
gnss2VelUncertainty: float
GNSS velocity uncertainty (scalar).
gnss2TimeUncertainty: float
GNSS time uncertainty.
class Gnss2Fix
NoFix
TimeFix
Fix2D
Fix3D
SBAS
RtkFloat
RtkFix
Gnss2SolEcef
class vnpy.Registers.GNSS.Gnss2SolEcef
Measurement register, ID 104
Estimated GNSS 2 Solution with ECEF position. This register is deprecated and will be removed in future firmware versions.
gps2Tow: double
GPS time of week.
gps2Week: uint16_t
The current GPS week.
gnss2Fix: Gnss2SolEcef.Gnss2Fix
Type of GNSS fix.
gnss2NumSats: uint8_t
Number of satellites tracked by GNSS receiver.
posX: double
GNSS position in ECEF-frame x-axis.
posY: double
GNSS position in ECEF-frame y-axis.
posZ: double
GNSS position in ECEF-frame z-axis.
velX: float
GNSS velocity in ECEF-frame x-axis.
velY: float
GNSS velocity in ECEF-frame y-axis.
velZ: float
GNSS velocity in ECEF-frame z-axis.
posUncertaintyX: float
GNSS position uncertainty ECEF X.
posUncertaintyY: float
GNSS position uncertainty ECEF Y.
posUncertaintyZ: float
GNSS position uncertainty ECEF Z.
gnss2VelUncertainty: float
GNSS velocity uncertainty (scalar).
gnss2TimeUncertainty: float
GNSS time uncertainty.
class Gnss2Fix
NoFix
TimeFix
Fix2D
Fix3D
SBAS
RtkFloat
RtkFix
ExtGnssOffset
class vnpy.Registers.GNSS.ExtGnssOffset
Configuration register, ID 157
positionX: float
positionY: float
positionZ: float
GNSSCompass
GnssCompassSignalHealthStatus
class vnpy.Registers.GNSSCompass.GnssCompassSignalHealthStatus
Measurement register, ID 86
Provides several indicators that serve as an overall health status of the GNSS compass subsystem.
numSatsPvtA: float
Number of satellites available for PVT solution for receiver A.
numSatsRtkA: float
Number of satellites available for RTK solution for receiver A.
highestCn0A: float
Highest CN0 reported on receiver A.
numSatsPvtB: float
Number of satellites available for the PVT solution of receiver B.
numSatsRtkB: float
Number of satellites available for the RTK solution of receiver B.
highestCn0B: float
Highest CN0 reported on receiver B.
numComSatsPvt: float
The number of common satellites that are used in the PVT solutions of both receiver A and receiver B.
numComSatsRtk: float
The number of common satellites that are used in the RTK solutions of both receiver A and receiver B.
GnssCompassBaseline
class vnpy.Registers.GNSSCompass.GnssCompassBaseline
Configuration register, ID 93
positionX: float
positionY: float
positionZ: float
uncertaintyX: float
uncertaintyY: float
uncertaintyZ: float
GnssCompassEstBaseline
class vnpy.Registers.GNSSCompass.GnssCompassEstBaseline
Measurement register, ID 97
Provides the estimated GNSS compass baseline measurement. The estimated position offset and measurement uncertainty is for antenna B relative to antenna A in the body reference frame.
estBaselineComplete: uint8_t
Set to 1 when baseline estimation has complete.
resv: uint8_t
Reserved.
numMeas: uint16_t
Number of measurements used by the estimated solution.
positionX: float
Position of GNSS antenna B with respect to antenna A in the body-frame x-axis.
positionY: float
Position of GNSS antenna B with respect to antenna A in the body-frame y-axis.
positionZ: float
Position of GNSS antenna B with respect to antenna A in the body-frame z-axis.
uncertaintyX: float
Uncertainty in the x-axis position measurement.
uncertaintyY: float
Uncertainty in the y-axis position measurement.
uncertaintyZ: float
Uncertainty in the z-axis position measurement.
GnssCompassStartupStatus
class vnpy.Registers.GNSSCompass.GnssCompassStartupStatus
Measurement register, ID 98
Provides status information on the GNSS compass startup process.
percentComplete: uint8_t
The estimated startup process completion percent.
currentHeading: float
The current GNSS compass heading estimate.
HardSoftIronEstimator
RealTimeHsiControl
class vnpy.Registers.HardSoftIronEstimator.RealTimeHsiControl
Configuration register, ID 44
mode: RealTimeHsiControl.Mode
applyCompensation: RealTimeHsiControl.ApplyCompensation
convergeRate: uint8_t
class Mode
Off
Run
Reset
class ApplyCompensation
Disable
Enable
EstMagCal
class vnpy.Registers.HardSoftIronEstimator.EstMagCal
Measurement register, ID 47
Magnetometer calibration values calculated by the real-time HSI calibration filter.
magGain00: float
Magnetometer calibration gain matrix, row 0, colum 0.
magGain01: float
Magnetometer calibration gain matrix, row 0, colum 1.
magGain02: float
Magnetometer calibration gain matrix, row 0, colum 2.
magGain10: float
Magnetometer calibration gain matrix, row 1, colum 0.
magGain11: float
Magnetometer calibration gain matrix, row 1, colum 1.
magGain12: float
Magnetometer calibration gain matrix, row 1, colum 2.
magGain20: float
Magnetometer calibration gain matrix, row 2, colum 0.
magGain21: float
Magnetometer calibration gain matrix, row 2, colum 1.
magGain22: float
Magnetometer calibration gain matrix, row 2, colum 2.
magBiasX: float
Magnetometer bias calibration, sensor-frame x-axis.
magBiasY: float
Magnetometer bias calibration, sensor-frame y-axis.
magBiasZ: float
Magnetometer bias calibration, sensor-frame z-axis.
Heave
HeaveOutputs
class vnpy.Registers.Heave.HeaveOutputs
Measurement register, ID 115
Real-time heave and heave-rate estimates, plus a delayed-heave estimate.
heave: float
Real-time heave estimate.
heaveRate: float
Real-time heave rate estimate.
delayedHeave: float
Delayed heave. Higher accuracy than real-time heave, but 50 seconds old.
HeaveBasicConfig
class vnpy.Registers.Heave.HeaveBasicConfig
Configuration register, ID 116
initialWavePeriod: float
initialWaveAmplitude: float
maxWavePeriod: float
minWaveAmplitude: float
delayedHeaveCutoffFreq: float
heaveCutoffFreq: float
heaveRateCutoffFreq: float
IMU
Mag
class vnpy.Registers.IMU.Mag
Measurement register, ID 17
Compensated magnetometer measurements.
magX: float
Compensated magnetometer measurement in the body-frame x-axis.
magY: float
Compensated magnetometer measurement in the body-frame y-axis.
magZ: float
Compensated magnetometer measurement in the body-frame z-axis.
Accel
class vnpy.Registers.IMU.Accel
Measurement register, ID 18
Compensated acceleration measurements
accelX: float
Compensated accelerometer measurement in the body-frame x-axis.
accelY: float
Compensated accelerometer measurement in the body-frame y-axis.
accelZ: float
Compensated accelerometer measurement in the body-frame z-axis.
Gyro
class vnpy.Registers.IMU.Gyro
Measurement register, ID 19
Compensated angular rate measurements.
gyroX: float
Compensated angular rate measurement in the body-frame x-axis.
gyroY: float
Compensated angular rate measurement in the body-frame y-axis.
gyroZ: float
Compensated angular rate measurement in the body-frame z-axis.
MagAccelGyro
class vnpy.Registers.IMU.MagAccelGyro
Measurement register, ID 20
Compensated magnetic, acceleration, and angular rate measurements.
magX: float
Compensated magnetometer measurement in the body-frame x-axis.
magY: float
Compensated magnetometer measurement in the body-frame y-axis.
magZ: float
Compensated magnetometer measurement in the body-frame z-axis.
accelX: float
Compensated accelerometer measurement in the body-frame x-axis.
accelY: float
Compensated accelerometer measurement in the body-frame y-axis.
accelZ: float
Compensated accelerometer measurement in the body-frame z-axis.
gyroX: float
Compensated angular rate measurement in the body-frame x-axis.
gyroY: float
Compensated angular rate measurement in the body-frame y-axis.
gyroZ: float
Compensated angular rate measurement in the body-frame z-axis.
MagCal
class vnpy.Registers.IMU.MagCal
Configuration register, ID 23
magGain00: float
magGain01: float
magGain02: float
magGain10: float
magGain11: float
magGain12: float
magGain20: float
magGain21: float
magGain22: float
magBiasX: float
magBiasY: float
magBiasZ: float
AccelCal
class vnpy.Registers.IMU.AccelCal
Configuration register, ID 25
accelGain00: float
accelGain01: float
accelGain02: float
accelGain10: float
accelGain11: float
accelGain12: float
accelGain20: float
accelGain21: float
accelGain22: float
accelBiasX: float
accelBiasY: float
accelBiasZ: float
RefFrameRot
class vnpy.Registers.IMU.RefFrameRot
Configuration register, ID 26
rfr00: float
rfr01: float
rfr02: float
rfr10: float
rfr11: float
rfr12: float
rfr20: float
rfr21: float
rfr22: float
ImuMeas
class vnpy.Registers.IMU.ImuMeas
Measurement register, ID 54
Provides the calibrated IMU measurements including barometric pressure.
uncompMagX: float
Magnetometer body-frame x-axis.
uncompMagY: float
Magnetometer body-frame y-axis.
uncompMagZ: float
Magnetometer body-frame z-axis.
uncompAccX: float
Accelerometer body-frame x-axis.
uncompAccY: float
Accelerometer body-frame y-axis.
uncompAccZ: float
Accelerometer body-frame z-axis.
uncompGyroX: float
Angular rate body-frame x-axis.
uncompGyroY: float
Angular rate body-frame y-axis.
uncompGyroZ: float
Angular rate body-frame z-axis.
temperature: float
Sensor temperature.
pressure: float
Barometric pressure.
DeltaThetaVelocity
class vnpy.Registers.IMU.DeltaThetaVelocity
Measurement register, ID 80
This register contains the output values of the onboard coning and sculling algorithm.
deltaTime: float
Duration of integration interval.
deltaThetaX: float
Integrated rotation vector x-axis.
deltaThetaY: float
Integrated rotation vector y-axis.
deltaThetaZ: float
Integrated rotation vector z-axis.
deltaVelX: float
Integrated velocity x-axis.
deltaVelY: float
Integrated velocity y-axis.
deltaVelZ: float
Integrated velocity z-axis.
DeltaThetaVelConfig
class vnpy.Registers.IMU.DeltaThetaVelConfig
Configuration register, ID 82
integrationFrame: DeltaThetaVelConfig.IntegrationFrame
gyroCompensation: DeltaThetaVelConfig.GyroCompensation
accelCompensation: DeltaThetaVelConfig.AccelCompensation
earthRateCompensation: DeltaThetaVelConfig.EarthRateCompensation
resv: uint16_t
class IntegrationFrame
Body
NED
class GyroCompensation
None
Bias
class AccelCompensation
None
Gravity
Bias
BiasAndGravity
class EarthRateCompensation
None
GyroRate
CoriolisAccel
RateAndCoriolis
GyroCal
class vnpy.Registers.IMU.GyroCal
Configuration register, ID 84
gyroGain00: float
gyroGain01: float
gyroGain02: float
gyroGain10: float
gyroGain11: float
gyroGain12: float
gyroGain20: float
gyroGain21: float
gyroGain22: float
gyroBiasX: float
gyroBiasY: float
gyroBiasZ: float
ImuFilterControl
class vnpy.Registers.IMU.ImuFilterControl
Configuration register, ID 85
magWindowSize: uint16_t
accelWindowSize: uint16_t
gyroWindowSize: uint16_t
tempWindowSize: uint16_t
presWindowSize: uint16_t
magFilterMode: uint8_t
accelFilterMode: uint8_t
gyroFilterMode: uint8_t
tempFilterMode: uint8_t
presFilterMode: uint8_t
class MagFilterMode
MagFilterMode.uncomp
MagFilterMode.comp
class AccelFilterMode
AccelFilterMode.uncomp
AccelFilterMode.comp
class GyroFilterMode
GyroFilterMode.uncomp
GyroFilterMode.comp
class TempFilterMode
TempFilterMode.uncomp
TempFilterMode.comp
class PresFilterMode
PresFilterMode.uncomp
PresFilterMode.comp
INS
InsSolLla
class vnpy.Registers.INS.InsSolLla
Measurement register, ID 63
Estimated INS solution with lat/lon/alt position.
timeGpsTow: double
GPS time of week.
timeGpsWeek: uint16_t
The current GPS week.
insStatus: uint16_t
Ins status bitfield.
yaw: float
Yaw angle.
pitch: float
Pitch angle.
roll: float
Roll angle.
posLat: double
Geodetic latitude.
posLon: double
Longitude.
posAlt: double
Altitude above WGS84 ellipsoid.
velN: float
Velocity in North direction.
velE: float
Velocity in East direction.
velD: float
Velocity in Down direction.
attUncertainty: float
Filter estimated attitude uncertainty.
posUncertainty: float
Filter estimated position uncertainty.
velUncertainty: float
Filter estimated velocity uncertainty.
class InsStatus
InsStatus.mode
Two-bit enumeration that indicates the current mode of the INS filter.
InsStatus.gnssFix
Indicates whether the GNSS has a valid fix.
InsStatus.resv1
Reserved.
InsStatus.imuErr
High if gyro or accelerometer subsystem error is detected.
InsStatus.magPresErr
High if magnetometer or pressure subsystem error is detected.
InsStatus.gnssErr
High if GNSS communication error is detected or if no valid PPS signal is received.
InsStatus.resv2
Reserved for internal use. May toggle state during runtime and should be ignored.
InsStatus.gnssCompassFix
Two-bit enumeration that indicates whether the GNSS compass is operational and aiding the INS.
InsSolEcef
class vnpy.Registers.INS.InsSolEcef
Measurement register, ID 64
Estimated INS Solution with ECEF position
timeGpsTow: double
GPS time of week.
timeGpsWeek: uint16_t
The current GPS week.
insStatus: uint16_t
Ins status bitfield.
yaw: float
Yaw angle.
pitch: float
Pitch angle.
roll: float
Roll angle.
posEx: double
Position in ECEF-frame x-axis.
posEy: double
Position in ECEF-frame y-axis.
posEz: double
Position in ECEF-frame z-axis.
velEx: float
Velocity in ECEF-frame x-axis.
velEy: float
Velocity in ECEF-frame y-axis.
velEz: float
Velocity in ECEF-frame z-axis.
attUncertainty: float
Filter estimated attitude uncertainty.
posUncertainty: float
Filter estimated position uncertainty.
velUncertainty: float
Filter estimated velocity uncertainty.
class InsStatus
InsStatus.mode
Two-bit enumeration that indicates the current mode of the INS filter.
InsStatus.gnssFix
Indicates whether the GNSS has a valid fix.
InsStatus.resv1
Reserved.
InsStatus.imuErr
High if gyro or accelerometer subsystem error is detected.
InsStatus.magPresErr
High if magnetometer or pressure subsystem error is detected.
InsStatus.gnssErr
High if GNSS communication error is detected or if no valid PPS signal is received.
InsStatus.resv2
Reserved for internal use. May toggle state during runtime and should be ignored.
InsStatus.gnssCompassFix
Two-bit enumeration that indicates whether the GNSS compass is operational and aiding the INS.
InsBasicConfig
class vnpy.Registers.INS.InsBasicConfig
Configuration register, ID 67
scenario: InsBasicConfig.Scenario
ahrsAiding: InsBasicConfig.AhrsAiding
estBaseline: InsBasicConfig.EstBaseline
resv: uint8_t
class Scenario
Ahrs
GnssInsWithPressure
GnssInsNoPressure
DualGnssNoPressure
DualGnssWithPressure
class AhrsAiding
Disable
Enable
class EstBaseline
Disable
Enable
InsStateLla
class vnpy.Registers.INS.InsStateLla
Measurement register, ID 72
Estimated INS state with lat/lon/alt position.
yaw: float
Yaw angle.
pitch: float
Pitch angle.
roll: float
Roll angle.
posLat: double
Geodetic latitude.
posLon: double
Longitude.
posAlt: double
Altitude above WGS84 ellipsoid.
velN: float
Velocity in North direction.
velE: float
Velocity in East direction.
velD: float
Velocity in Down direction.
accelX: float
Compensated accelerometer measurement in the body-frame x-axis.
accelY: float
Compensated accelerometer measurement in the body-frame y-axis.
accelZ: float
Compensated accelerometer measurement in the body-frame z-axis.
gyroX: float
Compensated angular rate measurement in the body-frame x-axis.
gyroY: float
Compensated angular rate measurement in the body-frame y-axis.
gyroZ: float
Compensated angular rate measurement in the body-frame z-axis.
InsStateEcef
class vnpy.Registers.INS.InsStateEcef
Measurement register, ID 73
Estimated INS state with ECEF position.
yaw: float
Yaw angle.
pitch: float
Pitch angle.
roll: float
Roll angle.
posEx: double
Position in ECEF-frame x-axis.
posEy: double
Position in ECEF-frame y-axis.
posEz: double
Position in ECEF-frame z-axis.
velEx: float
Velocity in ECEF-frame x-axis.
velEy: float
Velocity in ECEF-frame y-axis.
velEz: float
Velocity in ECEF-frame z-axis.
accelX: float
Compensated accelerometer measurement in the body-frame x-axis.
accelY: float
Compensated accelerometer measurement in the body-frame y-axis.
accelZ: float
Compensated accelerometer measurement in the body-frame z-axis.
gyroX: float
Compensated angular rate measurement in the body-frame x-axis.
gyroY: float
Compensated angular rate measurement in the body-frame y-axis.
gyroZ: float
Compensated angular rate measurement in the body-frame z-axis.
FilterStartupBias
class vnpy.Registers.INS.FilterStartupBias
Configuration register, ID 74
gyroBiasX: float
gyroBiasY: float
gyroBiasZ: float
accelBiasX: float
accelBiasY: float
accelBiasZ: float
presBias: float
InsRefOffset
class vnpy.Registers.INS.InsRefOffset
Configuration register, ID 105
refOffsetX: float
refOffsetY: float
refOffsetZ: float
refUncertX: float
refUncertY: float
refUncertZ: float
InsGnssSelect
class vnpy.Registers.INS.InsGnssSelect
Configuration register, ID 144
activeReceiverSelect: InsGnssSelect.ActiveReceiverSelect
usedForNavTime: uint8_t
hysteresisTime: uint8_t
useGnssCompass: InsGnssSelect.UseGnssCompass
resv1: uint8_t
resv2: uint8_t
class ActiveReceiverSelect
None
PrimaryReceiver
SecondaryReceiver
TertiaryReceiver
FallbackOnFailure
class UseGnssCompass
Off
On
System
UserTag
class vnpy.Registers.System.UserTag
Configuration register, ID 0
tag: char
Model
class vnpy.Registers.System.Model
Measurement register, ID 1
Product model string.
model: char
Product model number, maximum length 24 characters.
HwVer
class vnpy.Registers.System.HwVer
Measurement register, ID 2
Hardware version number.
hwVer: uint32_t
Hardware version number.
hwMinVer: uint32_t
Hardware minor version number.
Serial
class vnpy.Registers.System.Serial
Measurement register, ID 3
Device serial number.
serialNum: uint32_t
The unit’s serial number.
FwVer
class vnpy.Registers.System.FwVer
Measurement register, ID 4
Firmware version number.
fwVer: char
Firmware version.
BaudRate
class vnpy.Registers.System.BaudRate
Configuration register, ID 5
baudRate: BaudRate.BaudRate
serialPort: BaudRate.SerialPort
class BaudRate
Baud9600
Baud19200
Baud38400
Baud57600
Baud115200
Baud128000
Baud230400
Baud460800
Baud921600
class SerialPort
Serial1
Serial2
AsyncOutputType
class vnpy.Registers.System.AsyncOutputType
Configuration register, ID 6
ador: AsyncOutputType.Ador
serialPort: AsyncOutputType.SerialPort
class Ador
OFF
YPR
QTN
QMR
MAG
ACC
GYR
MAR
YMR
YBA
YIA
IMU
GPS
GPE
INS
INE
ISL
ISE
DTV
G2S
G2E
HVE
class SerialPort
Serial1
Serial2
AsyncOutputFreq
class vnpy.Registers.System.AsyncOutputFreq
Configuration register, ID 7
adof: AsyncOutputFreq.Adof
serialPort: AsyncOutputFreq.SerialPort
class Adof
Rate0Hz
Rate1Hz
Rate2Hz
Rate4Hz
Rate5Hz
Rate10Hz
Rate20Hz
Rate25Hz
Rate40Hz
Rate50Hz
Rate100Hz
Rate200Hz
class SerialPort
Serial1
Serial2
ProtocolControl
class vnpy.Registers.System.ProtocolControl
Configuration register, ID 30
asciiAppendCount: ProtocolControl.AsciiAppendCount
asciiAppendStatus: ProtocolControl.AsciiAppendStatus
spiAppendCount: ProtocolControl.SpiAppendCount
spiAppendStatus: ProtocolControl.SpiAppendStatus
asciiChecksum: ProtocolControl.AsciiChecksum
spiChecksum: ProtocolControl.SpiChecksum
errorMode: ProtocolControl.ErrorMode
class AsciiAppendCount
None
SyncInCount
SyncInTime
SyncOutCount
GpsPps
GpsTow
class AsciiAppendStatus
None
Ahrs
Ins
Imu
Gnss1
Gnss2
Gnss3
class SpiAppendCount
None
SyncInCount
SyncInTime
SyncOutCount
GpsPps
GpsTow
class SpiAppendStatus
None
Ahrs
Ins
Imu
Gnss1
Gnss2
Gnss3
class AsciiChecksum
Checksum8bit
Crc16bit
class SpiChecksum
Off
Checksum8bit
Crc16bit
class ErrorMode
Ignore
SendError
AdorOff
SyncControl
class vnpy.Registers.System.SyncControl
Configuration register, ID 32
syncInMode: SyncControl.SyncInMode
syncInEdge: SyncControl.SyncInEdge
syncInSkipFactor: uint16_t
resv1: uint32_t
syncOutMode: SyncControl.SyncOutMode
syncOutPolarity: SyncControl.SyncOutPolarity
syncOutSkipFactor: uint16_t
syncOutPulseWidth: uint32_t
resv2: uint32_t
class SyncInMode
Disable
Count
ImuSample
AsyncAll
Async0
class SyncInEdge
RisingEdge
FallingEdge
class SyncOutMode
None
ImuStart
ImuReady
NavReady
GpsPps
class SyncOutPolarity
NegativePulse
PositivePulse
SyncStatus
class vnpy.Registers.System.SyncStatus
Measurement register, ID 33
Contains counters based on the SyncIn and SyncOut events.
syncInCount: uint32_t
Amount of SyncIn Events that have occurred.
syncInTime: uint32_t
The amount of time that has elapsed since the last SyncIn Event.
syncOutCount: uint32_t
Keeps track of the number of times that a SyncOut pulse has occurred.
BinaryOutput
class vnpy.Registers.System.BinaryOutput
Base for Binary Output Config registers, IDs 75-77
asyncMode: uint16_t
rateDivisor: uint16_t
common: BinaryOutput.Common
time: BinaryOutput.Time
imu: BinaryOutput.Imu
gnss: BinaryOutput.Gnss
attitude: BinaryOutput.Attitude
ins: BinaryOutput.Ins
gnss2: BinaryOutput.Gnss2
gnss3: BinaryOutput.Gnss3
outputGroups: uint8_t
class BinaryOutput.Common
Binary output config Common group
timeStartup: bool
timeGps: bool
timeSyncIn: bool
ypr: bool
quaternion: bool
angularRate: bool
posLla: bool
velNed: bool
accel: bool
imu: bool
magPres: bool
deltas: bool
insStatus: bool
syncInCnt: bool
timeGpsPps: bool
class BinaryOutput.Time
Binary output config Time group
timeStartup: bool
timeGps: bool
timeGpsTow: bool
timeGpsWeek: bool
timeSyncIn: bool
timeGpsPps: bool
timeUtc: bool
syncInCnt: bool
syncOutCnt: bool
timeStatus: bool
class BinaryOutput.Imu
Binary output config Imu group
imuStatus: bool
uncompMag: bool
uncompAccel: bool
uncompGyro: bool
temperature: bool
pressure: bool
deltaTheta: bool
deltaVel: bool
mag: bool
accel: bool
angularRate: bool
sensSat: bool
class BinaryOutput.Gnss
Binary output config Gnss group
gnss1TimeUtc: bool
gps1Tow: bool
gps1Week: bool
gnss1NumSats: bool
gnss1Fix: bool
gnss1PosLla: bool
gnss1PosEcef: bool
gnss1VelNed: bool
gnss1VelEcef: bool
gnss1PosUncertainty: bool
gnss1VelUncertainty: bool
gnss1TimeUncertainty: bool
gnss1TimeInfo: bool
gnss1Dop: bool
gnss1SatInfo: bool
gnss1RawMeas: bool
gnss1Status: bool
gnss1AltMsl: bool
class BinaryOutput.Attitude
Binary output config Attitude group
ypr: bool
quaternion: bool
dcm: bool
magNed: bool
accelNed: bool
linBodyAcc: bool
linAccelNed: bool
yprU: bool
heave: bool
attU: bool
class BinaryOutput.Ins
Binary output config Ins group
insStatus: bool
posLla: bool
posEcef: bool
velBody: bool
velNed: bool
velEcef: bool
magEcef: bool
accelEcef: bool
linAccelEcef: bool
posU: bool
velU: bool
class BinaryOutput.Gnss2
Binary output config Gnss2 group
gnss2TimeUtc: bool
gps2Tow: bool
gps2Week: bool
gnss2NumSats: bool
gnss2Fix: bool
gnss2PosLla: bool
gnss2PosEcef: bool
gnss2VelNed: bool
gnss2VelEcef: bool
gnss2PosUncertainty: bool
gnss2VelUncertainty: bool
gnss2TimeUncertainty: bool
gnss2TimeInfo: bool
gnss2Dop: bool
gnss2SatInfo: bool
gnss2RawMeas: bool
gnss2Status: bool
gnss2AltMsl: bool
class BinaryOutput.Gnss3
Binary output config Gnss3 group
gnss3TimeUtc: bool
gps3Tow: bool
gps3Week: bool
gnss3NumSats: bool
gnss3Fix: bool
gnss3PosLla: bool
gnss3PosEcef: bool
gnss3VelNed: bool
gnss3VelEcef: bool
gnss3PosUncertainty: bool
gnss3VelUncertainty: bool
gnss3TimeUncertainty: bool
gnss3TimeInfo: bool
gnss3Dop: bool
gnss3SatInfo: bool
gnss3RawMeas: bool
gnss3Status: bool
gnss3AltMsl: bool
BinaryOutput1
class vnpy.BinaryOutput1
Configuration register, ID 75. Derived from BinaryOutput.
BinaryOutput2
class vnpy.BinaryOutput2
Configuration register, ID 76. Derived from BinaryOutput.
BinaryOutput3
class vnpy.BinaryOutput3
Configuration register, ID 77. Derived from BinaryOutput.
NmeaOutput1
class vnpy.Registers.System.NmeaOutput1
Configuration register, ID 101
port: NmeaOutput1.Port
rate: NmeaOutput1.Rate
mode: NmeaOutput1.Mode
gnssSelect: NmeaOutput1.GnssSelect
msgSelection: uint32_t
class Port
None
Serial1
Serial2
Serial1And2
class Rate
Rate0Hz
Rate1Hz
Rate5Hz
Rate10Hz
Rate20Hz
class Mode
V41GPID
V23GPID
V41SYSID
class GnssSelect
GnssA
ActiveReceiver
class MsgSelection
MsgSelection.rmcGnss
MsgSelection.rmcIns
MsgSelection.ggaGnss
MsgSelection.ggaIns
MsgSelection.gllGnss
MsgSelection.gllIns
MsgSelection.gsaGnss
MsgSelection.gsvGnss
MsgSelection.hdgIns
MsgSelection.hdtIns
MsgSelection.thsIns
MsgSelection.vtgGnss
MsgSelection.vtgIns
MsgSelection.zdaGnss
MsgSelection.zdaIns
MsgSelection.pashrIns
MsgSelection.tss1Ins
MsgSelection.indyn
NmeaOutput2
class vnpy.Registers.System.NmeaOutput2
Configuration register, ID 102
port: NmeaOutput2.Port
rate: NmeaOutput2.Rate
mode: NmeaOutput2.Mode
gnssSelect: NmeaOutput2.GnssSelect
msgSelection: uint32_t
class Port
None
Serial1
Serial2
Serial1And2
class Rate
Rate0Hz
Rate1Hz
Rate5Hz
Rate10Hz
Rate20Hz
class Mode
V41GPID
V23GPID
V41SYSID
class GnssSelect
GnssA
ActiveReceiver
class MsgSelection
MsgSelection.rmcGnss
MsgSelection.rmcIns
MsgSelection.ggaGnss
MsgSelection.ggaIns
MsgSelection.gllGnss
MsgSelection.gllIns
MsgSelection.gsaGnss
MsgSelection.gsvGnss
MsgSelection.hdgIns
MsgSelection.hdtIns
MsgSelection.thsIns
MsgSelection.vtgGnss
MsgSelection.vtgIns
MsgSelection.zdaGnss
MsgSelection.zdaIns
MsgSelection.pashrIns
MsgSelection.tss1Ins
MsgSelection.indyn
LegacyCompatibilitySettings
class vnpy.Registers.System.LegacyCompatibilitySettings
Configuration register, ID 206
insLegacy: LegacyCompatibilitySettings.InsLegacy
gnssLegacy: uint8_t
imuLegacy: LegacyCompatibilitySettings.ImuLegacy
hwLegacy: LegacyCompatibilitySettings.HwLegacy
class InsLegacy
Current
Legacy
class ImuLegacy
Current
Legacy
class HwLegacy
Current
Legacy
class GnssLegacy
GnssLegacy.legacyGnssFix
GnssLegacy.requireReg55Reset
GnssLegacy.alwaysPpsPulse
VelocityAiding
VelAidingMeas
class vnpy.Registers.VelocityAiding.VelAidingMeas
Configuration register, ID 50
velocityX: float
velocityY: float
velocityZ: float
VelAidingControl
class vnpy.Registers.VelocityAiding.VelAidingControl
Configuration register, ID 51
velAidEnable: VelAidingControl.VelAidEnable
velUncertTuning: float
resv: float
class VelAidEnable
Disable
Enable
WorldMagGravityModel
RefModelConfig
class vnpy.Registers.WorldMagGravityModel.RefModelConfig
Configuration register, ID 83
enableMagModel: RefModelConfig.EnableMagModel
enableGravityModel: RefModelConfig.EnableGravityModel
resv1: uint8_t
resv2: uint8_t
recalcThreshold: uint32_t
year: float
latitude: double
longitude: double
altitude: double
class EnableMagModel
Disabled
Enabled
class EnableGravityModel
Disabled
Enabled